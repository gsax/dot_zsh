# Source the Environment

# fzf settings
# autocompletion
[[ $- == *i* ]] &&
source ~/.go/src/github.com/junegunn/fzf/shell/completion.zsh 2> /dev/null
# key-bindings
[[ -s ~/.go/src/github.com/junegunn/fzf/shell/key-bindings.zsh ]] &&
source ~/.go/src/github.com/junegunn/fzf/shell/key-bindings.zsh
# use rg instead of find
[[ -x $(which fd) ]] &&
FZF_DEFAULT_COMMAND='fd --type f'; export FZF_DEFAULT_COMMAND

# nnn settings
[[ -x $(which nnn) ]] &&
source ~/Appz/nnn/misc/quitcd/quitcd.zsh

# broot settings
[[ -x $(which broot) ]] &&
source ~/.config/broot/launcher/bash/br

# stack autocompletion
[[ -x $(which stack) ]] &&
eval "$(stack --bash-completion-script stack)"

# zsh autosuggestions
[[ -s $ZDOTDIR/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh ]] &&
source ~/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
# zsh syntax highlighting
[[ -s $ZDOTDIR/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh ]] &&
source ~/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh


# Aliases and Functions

# go quick to private wiki
alias wiki='/usr/bin/firefox -P chaisen http://pc.protaisn:5001/'

# a test http server on localhost
alias httpd='/usr/bin/gatling -F -S -T 23 -P 2M -d -V -i 127.0.0.1 -p 8080'

# use always underscores instead of spaces with youtube-dl
alias youtube-dl='youtube-dl --restrict-filenames'

# download videos with codecs supported by my TV
TV-dl() {
  command youtube-dl --restrict-filenames -f 'bestvideo[ext=mp4][fps <=30]+bestaudio[ext=m4a]/best[ext=mp4]/best' "$@"
}

# don't store su in history
alias su=' su'

# aliases for translation with leo
alias dict='surfraw leodict'

# clone projects from GitHub
GitHub() {
	command git clone 'https://github.com/'"$@"
}

# mosh connections to my uberspace webspaces
alias uber-gsax='mosh -p 62828 uber-gsax'
alias uber-protaisn='mosh -p 61106 uber-protaisn'
alias uber-straemme='mosh -p 63105 uber-straemme'

# use exa instead of ls if available
if [[ -x $(which exa) ]]; then
	alias ls='exa -F -sName --time-style=long-iso'
fi

# ls aliases
alias la='ls -a'
alias ll='ls -lg'
alias llx='ll -@'
alias lla='ll -a'
alias llax='llx -@'
alias llb='ll -b'
alias llbx='lb -@'
alias llba='lb -a'
alias llbax='lba -@'
alias llB='ll -B'
alias llBx='lB -@'
alias llBa='lB -a'
alias llBax='lBa -@'
alias lt='ls -T'
alias ltx='lt -@'
alias lta='lt -a'
alias ltax='lta -@'

# cal start week with mondays
alias cal='cal -m'
# gcal 
gcal() {
	command gcal --iso-week-number=yes -s1 -qDE_BY -H '\e[32m:\e[0m:\e[34m:\e[0m' "$@"
}

# find shortcuts
# case insensitive search
Ff() {
	command bfs . -iname "*$@*"
}
# count all files in a folder
Fc() {
	command fd . "$@" -t f | wc -l
}
# find broken symlinks
Fl() {
	command bfs -L "$@" -type l
}

# unpack
unpack() {
	setopt localoptions
	setopt kshglob
	local c e i

	(($#)) || return

	for i; do
		c=''
		e=1

		if [[ ! -r $i ]]; then
			echo "$0: file is unreadable: \`$i'" >&2
			continue
		fi

		case $i in
			*.t@(gz|lz|xz|b@(2|z?(2))|a@(z|r?(.@(Z|bz?(2)|gz|lzma|xz)))))
				c=(bsdtar xf);;
			*.7z)  c=(7z x);;
			*.Z)   c=(uncompress);;
			*.bz2) c=(bunzip2);;
			*.gz)  c=(gunzip);;
			*.rar) c=(7z x);;
			*.xz)  c=(unxz);;
			*.zip) c=(unzip);;
			*.zst) c=(unzstd);;
			*)     echo "$0: unrecognized file extension: \`$i'" >&2
				continue;;
		esac

		command "${c[@]}" "$i"
		((e = e || $?))
	done
	return "$e"
}

# load nvm only on demand
Nvm() {
	# load nvm
	[[ -s "$NVM_DIR/nvm.sh" ]] &&
		source "$NVM_DIR/nvm.sh"
	# load nvm autocompletion
	[[ -s "$NVM_DIR/bash_completion" ]] &&
		source "$NVM_DIR/bash_completion"
}

##########
# PYTHON #
##########

# install required packages
alias PipInstall='pip install pylama --user'

# show outdated packages
alias PipListOutdated='pip list --outdated --format=freeze --user | xargs -n1'

# update all manually installed packages
alias PipUpdate='pip list --outdated --format=freeze --user | cut -d = -f 1 | xargs -n1 pip install -U --user'

# source virtual environment
Venv() {
	if [[ -n "$@" ]]; then
		source "$@"/venv/bin/activate
	else
		source ./venv/bin/activate
	fi
}


# create virtual environment
Vcenv() {
	if [[ -n "$@" ]]; then
		mkdir "$@"
		cd "$@"
		python -m venv venv
		source ./venv/bin/activate
	else
		python -m venv venv
		source ./venv/bin/activate
	fi
}

# source virtual environment
Venv() {
	if [[ -n "$@" ]]; then
		source "$@"/venv/bin/activate
	else
		source ./venv/bin/activate
	fi
}


########
# RUST #
########

# install required packages
alias CargoInstall='
	cargo install tokei &&
	RUSTFLAGS="-C target-cpu=haswell" cargo install --features "simd-accel pcre2" ripgrep &&
	cargo install tealdeer &&
	cargo install racer'

# show all packages installed in the users home
alias CargoList='cargo install --list'

# update all manually installed packages
alias CargoUpdate='
	cargo install --force tokei &&
	RUSTFLAGS="-C target-cpu=haswell" cargo install --features "simd-accel pcre2" --force ripgrep &&
	cargo install --force tealdeer &&
	cargo install --force racer'


######
# GO #
######

# install required packages
alias GoInstall='
	go get github.com/zserge/zs \
	github.com/junegunn/fzf \
	github.com/oem/lnch \
	github.com/FooSoft/homemaker \
	github.com/derekparker/delve/cmd/dlv \
	github.com/felixge/go-xxd \
	github.com/opennota/findimagedupes \
	github.com/thefryscorer/schemer2'

# show all packages installed in the users home
alias GoList='cd ~/.go/ && go list ./... && cd -'

# update all manually installed packages
alias GoUpdate='
	go get -u github.com/zserge/zs \
	github.com/junegunn/fzf \
	github.com/oem/lnch \
	github.com/FooSoft/homemaker \
	github.com/derekparker/delve/cmd/dlv \
	github.com/felixge/go-xxd \
	github.com/opennota/findimagedupes \
	github.com/thefryscorer/schemer2'
