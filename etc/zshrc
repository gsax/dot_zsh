export HISTSIZE=1000
export SAVEHIST=1000
export HISTFILE=$ZDOTDIR/.zhistory
# load LS_COLORS
eval "`dircolors -b`"

# load modules
# colorful output
autoload -U colors; colors
autoload -U compinit; compinit
autoload -U bashcompinit; bashcompinit

# slashes, dots and other non alphanumeric chars delimit words
autoload -U select-word-style
select-word-style bash

# load nslookup (wrapper around nslookup)
autoload -U nslookup

# load zargs (zsh version of xargs)
autoload -U zargs

# load zmv (mv on steroids)
autoload -U zmv
autoload -U zcp
autoload -U zln

# append command to history file once executed
setopt inc_append_history
# import new commands from the history file also in other zsh-session
setopt share_history
# save each command's beginning timestamp and the duration to the history file
setopt extended_history
# If a new command line being added to the history list duplicates an older
# one, the older command is removed from the list
setopt hist_ignore_all_dups
# remove command lines from the history list when the first character on the
# line is a space
setopt hist_ignore_space
# allow # before commands, so that they are not executed
setopt interactive_comments

# in order to use #, ~ and ^ for filename generation grep word
# *~(*.gz|*.bz|*.bz2|*.zip|*.Z) -> searches for word not in compressed files
# don't forget to quote '^', '~' and '#'!
setopt extended_glob
# autoremove slash
setopt auto_remove_slash
# don't print an error for unmatched patterns
setopt no_nomatch
# allow brace expansion for letters
setopt brace_ccl

# deactivate annoying beep
setopt no_beep

# use emacs style:
bindkey -e

# bind insert, del, home, end, pgup and pgdn in different terminals
case $TERM in
screen*)
	bindkey "^[[1~" beginning-of-line
	bindkey "^[[4~" end-of-line
	bindkey "^[[P" delete-char
	bindkey "^[[4h" quoted-insert
	bindkey "^[[5~" history-beginning-search-backward
	bindkey "^[[6~" history-beginning-search-forward
;;
st*)
	bindkey "^[[H" beginning-of-line
	bindkey "^[[4~" end-of-line
	bindkey "^[[P" delete-char
	bindkey "^[[4h" quoted-insert
	bindkey "^[[5~" history-beginning-search-backward
	bindkey "^[[6~" history-beginning-search-forward
;;
rxvt*)
	bindkey "^[[7~" beginning-of-line
	bindkey "^[[8~" end-of-line
	bindkey "^[[3~" delete-char
	bindkey "^[[2~" quoted-insert
	bindkey "^[[5~" history-beginning-search-backward
	bindkey "^[[6~" history-beginning-search-forward
;;
linux)
	bindkey "^[[1~" beginning-of-line
	bindkey "^[[4~" end-of-line
	bindkey "^[[3~" delete-char
	bindkey "^[[2~" quoted-insert
	bindkey "^[[5~" history-beginning-search-backward
	bindkey "^[[6~" history-beginning-search-forward
;;
esac

# whenever a command completion is attempted, make sure the entire command path
# is hashed first.
setopt hash_list_all
# not just at the end
setopt complete_in_word

# select completion from a colored menu
zstyle ':completion:*' menu select=5
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# autocomplete PID when jobname is given
if [[ ${EUID} == 0 ]] ; then
    zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
    zstyle ':completion:*:*:kill:*' command 'ps -e -o pid,%cpu,tty,cputime,cmd'
else
    zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
    zstyle ':completion:*:*:kill:*' command 'ps -u$USER -o pid,%cpu,tty,cputime,cmd'
fi

# set different prompts for root and users
if [[ ${EUID} == 0 ]] ; then
    PROMPT="%{$fg[red]%}%B%n%b%{$reset_color%}%{$fg[blue]%}%B@%b%{$reset_color%}%{$fg[green]%}%m%{$reset_color%} %{$fg[blue]%}%B%1~ %#%b%{$reset_color%} "
else
    PROMPT="%{$fg[green]%}%B%n%b%{$reset_color%}%{$fg[blue]%}%B@%b%{$reset_color%}%{$fg[green]%}%m%{$reset_color%} %{$fg[blue]%}%B%1~ %#%b%{$reset_color%} "
fi

# set right prompt
RPROMPT="%{$fg[yellow]%}%?%{$reset_color%} %{$fg[blue]%}[%*]%{$reset_color%}"

# show duration of program execution > 10s
REPORTTIME=10

# set titles of terms
function ESC_print () {
    info_print $'\ek' $'\e\\' "$@"
}
function set_title () {
    info_print $'\e]0;' $'\a' "$@"
}

function info_print () {
    local esc_begin esc_end
    esc_begin="$1"
    esc_end="$2"
    shift 2
    printf '%s' ${esc_begin}
    printf '%s' "$*"
    printf '%s' "${esc_end}"
}

precmd () {
    if [[ $TERM == screen* ]] ; then
        ESC_print "zsh"
    fi
    # adjust title of xterm
    case $TERM in
        (xterm*|rxvt*)
	    #set_title ${(%):-"%n@%m: %~"}
	    set_title ${(%):-"%n@%m: zsh"}
	    ;;
    esac
}

# preexec() => a function running before every command
preexec () {
# set screen window title if running in a screen
    if [[ "$TERM" == screen* ]] ; then
        # local CMD=${1[(wr)^(*=*|sudo|ssh|-*)]}       # don't use hostname
	# local CMD=${1[(wr)^(*=*|sudo|ssh|-*)]}$NAME" # use hostname
	local CMD="${1}"
	ESC_print ${CMD}
    fi
}

# support colors in less
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[04;30;32m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
export GROFF_NO_SGR=1

# lets make ls a colorfull output and append file type indicators to entries
if [[ -x `which exa` ]]; then
  alias ls='exa -F --time-style=long-iso'
else
  alias ls='ls --color=auto -F --time-style=long-iso'
fi

# colorfull grep
alias grep='grep --color=auto'

# make some programs colorfull with grc
if [[ -x `which grc` ]]; then
  source /etc/zsh/grc.sh
fi

# dir control
export DIRSTACKSIZE=10
setopt auto_pushd
setopt pushd_ignore_dups
setopt pushd_minus
setopt pushd_to_home

# use the DIRSTACK in all sessions
DIRSTACKFILE=$ZDOTDIR/.zdirs
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
  dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
  [[ -d $dirstack[1] ]] && cd $dirstack[1] && cd $OLDPWD
fi
chpwd() {
  print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
}

# let ^Z toggle vi
foreground-vi() {
  fg %vi
}
zle -N foreground-vi
bindkey '^Z' foreground-vi

# make alias for vimdiff
alias vimdiff='nvim -d'

# alias for reloading zshrc
alias reload='. /etc/zsh/zshenv &&
	      . $ZDOTDIR/.zshenv &&
              . /etc/zsh/zprofile &&
	      . $ZDOTDIR/.zprofile &&
              . /etc/zsh/zshrc &&
	      . $ZDOTDIR/.zshrc &&
              . /etc/zsh/zlogin &&
	      . $ZDOTDIR/.zlogin &&
	      rehash &&
	      echo "ZSH config reloaded"'

# make sure our environment is clean regarding colors
for color in BLUE RED GREEN CYAN YELLOW MAGENTA WHITE ; unset $color

# edit GnuPG encrypted files transparent
GPG_TTY=`tty`
export GPG_TTY

# pythonshell tab-completion
export PYTHONSTARTUP=/etc/pythonrc

